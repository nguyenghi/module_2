// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VitaBookStrore.Models;

namespace VitaBookStrore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200706045817_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VitaBookStrore.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Depscrip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Remain")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Hoàng Hùng",
                            AvatarPath = "~\\images\\images (2).jpg",
                            Depscrip = "Để học tốt Toán lớp 7, loạt bài Giải bài tập Toán lớp 7 Đại số, Hình học học kì 1 và học kì 2 bám sát nội dung sách giáo khoa Toán lớp 7 Tập 1 và Tập 2.",
                            GenreId = 1,
                            Name = "Toán",
                            Price = 50000,
                            Remain = 0
                        },
                        new
                        {
                            Id = 2,
                            Author = "Hoàng Hùng",
                            AvatarPath = "~\\images\\images (2).jpg",
                            Depscrip = "Để học tốt Toán lớp 7, loạt bài Giải bài tập Toán lớp 7 Đại số, Hình học học kì 1 và học kì 2 bám sát nội dung sách giáo khoa Toán lớp 7 Tập 1 và Tập 2.",
                            GenreId = 2,
                            Name = "Văn",
                            Price = 30000,
                            Remain = 0
                        });
                });

            modelBuilder.Entity("VitaBookStrore.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GenreName = " Sách kĩ năng"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreName = " Sách thiếu nhi"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreName = " Sách kinh doanh"
                        });
                });

            modelBuilder.Entity("VitaBookStrore.Models.Book", b =>
                {
                    b.HasOne("VitaBookStrore.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
